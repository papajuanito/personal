//
// Hexagon framework modules
//

@mixin hexagon($width, $is-solid: false, $is-anchor: false) {
    position: relative;
    display: block;
    width: $width;
    $height: $width / cos(30deg) / 2;
    height: $height;
    margin: $height / 2 auto;
    background-position: center;
    background-repeat: no-repeat;
    border-radius: 2px / 4px;
    // line-height: $height * 2;
    text-align: center;
    vertical-align: middle;
    @if $is-solid {
        &:after, &:before {
            @extend %scut-absolute;
            z-index: -2;
            display: block;
            width: inherit;
            height: inherit;
            background-color: inherit;
            border-radius: inherit;
            content: "";
            @include transform-style(preserve-3d);
            @include image-rendering(crisp-edges);
        }
        &:after {
            @include transform(rotate(60deg));
        }
        &:before {
            @include transform(rotate(-60deg));
        }
    }
    @else {
        background-size: auto $height * 2;
        @include transform(translate3d(0,0,0));
        @include backface-visibility(hidden);
        @include perspective(1000);
        span[role="presentation"] {
            @extend %scut-absolute;
            z-index: -2;
            display: block;
            width: 100%;
            height: 100%;
            overflow: hidden;
            background: inherit;
            border-radius: inherit;
            outline: 1px solid transparent;
            @include transform-style(preserve-3d);
            @include perspective(1px); // hacking the planet. This prevents jaggies in Firefox
            &:before {
                position: absolute;
                left: 0;
                z-index: -1;
                background: inherit;
                content: '';
                @include scut-size($height * 2);
                @include transform-style(preserve-3d);
            }
            &:nth-child(odd) {
                z-index: -1;
                @include transform(rotate(60deg));
                &:before {
                    top: 0;
                    @include transform(rotate(-60deg) translate(-$height, 0));
                    @include transform-origin(0 0);
                }
            }
            &:nth-child(even) {
                @include transform(rotate(-60deg));
                &:before {
                    bottom: 0;
                    @include transform(rotate(60deg) translate($width * cos(30deg) / 4.14, $width * cos(30deg) / 4));
                }
            }
        }
        @if $is-anchor {
            &:before {
                display: none;
                background: url("../img/bg-hexagon-hover.png") no-repeat center;
                background-size: $width $height * 2;
                content: '';
                @include scut-center-absolutely($width $height * 2.05);
            }
            .no-touch &:hover, &:focus {
                &:before {
                    display: block;
                }
            }
        }
    }
}

// A generic hexagon
.hexagon {
    @include hexagon($width: rem-calc(120px));
}

%hexagon-fake {
    position: relative;
    display: block;
    &:before {
        background: url("../img/mask-hexagon.png");
        background-size: cover;
        content: '';
        @include scut-absolute(0 0 0 0);
    }
}

.hexagon-hover {
    display: none;
    background: url("../img/bg-hexagon-hover.png");
    background-size: cover;
    content: '';
    @include scut-absolute(0 0 0 0);
}
